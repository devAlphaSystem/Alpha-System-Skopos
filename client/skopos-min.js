((window,document)=>{const scriptElement=document.currentScript;if(!scriptElement)return;const endpoint=scriptElement.getAttribute("data-endpoint")||"/api/event",autoTrackPageviews="false"!==scriptElement.getAttribute("data-auto-track-pageviews");function track(eventName,eventType="custom",customData={}){const url=new URL(window.location.href),utm=function getUtmParams(params){const utmKeys=["utm_source","utm_medium","utm_campaign","utm_term","utm_content"],utm={};for(const key of utmKeys)params.has(key)&&(utm[key]=params.get(key));return utm}(url.searchParams);!function sendData(payload){const data=JSON.stringify(payload);try{navigator.sendBeacon?navigator.sendBeacon(endpoint,new Blob([data],{type:"application/json"})):fetch(endpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:data,keepalive:!0})}catch(e){console.error("Skopos:",e)}}({type:eventType,name:eventName,url:url.href,referrer:document.referrer,screenWidth:window.screen.width,screenHeight:window.screen.height,language:navigator.language,...utm,customData:customData})}let lastPath="";function trackPageView(){const currentPath=window.location.pathname;currentPath!==lastPath&&(lastPath=currentPath,track(currentPath,"pageView"))}function scanAndBindEvents(rootElement){const elements=rootElement.querySelectorAll("[skopos-event]");for(const element of elements){if(element.hasAttribute("skopos-bound"))continue;const eventName=element.getAttribute("skopos-event"),eventType=element.getAttribute("skopos-event-on")||"click";element.addEventListener(eventType,(()=>{let customData={};const eventDataJSON=element.getAttribute("skopos-data");if(eventDataJSON)try{customData=JSON.parse(eventDataJSON)}catch(e){console.error("Skopos: Invalid JSON in skopos-data.",e,element)}const eventDataFromAttr=element.getAttribute("skopos-data-from");if(eventDataFromAttr){const definitions=eventDataFromAttr.split(",");for(const def of definitions){const parts=def.split(":");if(2!==parts.length){console.warn(`Skopos: Malformed 'skopos-data-from' part: "${def}"`);continue}const key=parts[0].trim(),selector=parts[1].trim(),targetElement=document.querySelector(selector);if(targetElement){const value="value"in targetElement?targetElement.value:targetElement.textContent;customData[key]=value.trim()}else console.warn(`Skopos: Element not found for selector in 'skopos-data-from': "${selector}"`)}}track(eventName,"custom",customData)})),element.setAttribute("skopos-bound","true")}}function processCommand(...args){const[command,...rest]=args;if("event"===command){const[eventName,customData]=rest;"string"==typeof eventName&&track(eventName,"custom",customData||{})}else"pageview"===command&&trackPageView()}if(window.skopos=(...args)=>{window.skopos.q=window.skopos.q||[],window.skopos.q.push(args)},window.skopos=processCommand,window.skopos.q)for(const args of window.skopos.q)processCommand(...args);if(autoTrackPageviews){const originalPushState=history.pushState;history.pushState=function(...args){originalPushState.apply(this,args),setTimeout(trackPageView,50)},window.addEventListener("popstate",trackPageView),"complete"===document.readyState?trackPageView():window.addEventListener("load",trackPageView,{once:!0})}document.addEventListener("DOMContentLoaded",(()=>{scanAndBindEvents(document.body);new MutationObserver((mutations=>{for(const mutation of mutations)for(const node of mutation.addedNodes)node.nodeType===Node.ELEMENT_NODE&&scanAndBindEvents(node)})).observe(document.body,{childList:!0,subtree:!0})}))})(window,document);